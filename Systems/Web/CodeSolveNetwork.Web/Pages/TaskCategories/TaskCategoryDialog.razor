﻿@using CodeSolveNetwork.Web.Pages.TaskCategories.Models
@using CodeSolveNetwork.Web.Pages.TaskCategories.Services
@inherits MudComponentBase

@inject ITaskCategoryService TaskCategoryService

<MudDialog>
    <DialogContent>
        <MudForm Model="Model" @ref="form">
            <MudGrid>
                <MudItem xs="12" sm="6">
                    <MudTextField Label="Name" @bind-Value="Model.Name"
                                  For="@(() => Model.Name)"
                                  Required="true"
                                  RequiredError="Name is required!">
                    </MudTextField>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="MudBlazor.Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public Guid? TaskCategoryId { get; set; }

    [Parameter] public TaskCategoryModel Model { get; set; } = new();

    private MudForm form = default!;

    protected override async Task OnInitializedAsync()
    {        
        if (TaskCategoryId != null)
        {
            var taskCategory = await TaskCategoryService.GetTaskCategory(TaskCategoryId.Value);

            Model.Id = taskCategory.Id;
            Model.Name = taskCategory.Name;
        }
    }

    async Task Submit()
    {
        await form.Validate();
        if (form.IsValid)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
    }

    void Cancel() => MudDialog.Cancel();
}